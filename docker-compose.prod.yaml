version: '3'

services:
  app-1:
    image: advancedserver_app
    build:
      context: ./backend
    command: npm run start
    deploy:
      replicas: 1
      update_config:
        parallelism: 1
        delay: 10s
      restart_policy:
        condition: on-failure
    environment:
      NODE_ENV: production
      COMPOSE: "true"
    env_file:
      - ./backend/.env
    networks:
      - app-network
    depends_on:
      - postgres
      - redis

  app-2:
    image: advancedserver_app
    build:
      context: ./backend
    command: npm run start
    deploy:
      replicas: 1
      update_config:
        parallelism: 1
        delay: 10s
      restart_policy:
        condition: on-failure
    environment:
      NODE_ENV: production
      COMPOSE: "true"
    env_file:
      - ./backend/.env
    networks:
      - app-network
    depends_on:
      - postgres
      - redis

  app-3:
    image: advancedserver_app
    build:
      context: ./backend
    command: npm run start
    deploy:
      replicas: 1
      update_config:
        parallelism: 1
        delay: 10s
      restart_policy:
        condition: on-failure
    environment:
      NODE_ENV: production
      COMPOSE: "true"
    env_file:
      - ./backend/.env
    networks:
      - app-network
    depends_on:
      - postgres
      - redis

  nginx:
    image: nginx:alpine
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    ports:
      - "80:80"
    networks:
      - app-network
    depends_on:
      - app

  postgres:
    image: postgres
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
    env_file:
      - ./backend/.env
    volumes:
      - postgres-data:/var/lib/postgresql/data
    ports:
      - '5431:5432'
    networks:
      - app-network

  redis:
    image: redis:latest
    command: redis-server /usr/local/etc/redis/redis.conf
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
    env_file:
      - ./backend/.env
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
      - ./redis.conf:/usr/local/etc/redis/redis.conf
    networks:
      - app-network


volumes:
  postgres-data:
  redis-data:


networks:
  app-network:
    driver: overlay
    internal: true
